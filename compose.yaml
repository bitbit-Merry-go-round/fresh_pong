version: '3'

services:

  # gateway로 명명 새로해야 함
  backend:
    container_name: backend
    image: backend
    pull_policy: never
    build: ./backend
    env_file:
      - .env
    depends_on:
      backend_db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - backend_vol:/var/www/django/backend/
    networks:
      - pong_net

  backend_db:
    container_name: backend_db
    image: postgres:14.11-alpine3.18
    restart: always
    environment:
      POSTGRES_USER: ${BACKEND_DB_USER}
      PGUSER: ${BACKEND_DB_USER}
      POSTGRES_PASSWORD: ${BACKEND_DB_PW}
      POSTGRES_DB: ${BACKEND_DB_NAME}
      PGDATABASE: ${BACKEND_DB_NAME}
      PGPORT: ${BACKEND_DB_PORT}
    volumes:
      - backend_db_vol:/var/lib/postgresql/data
    command: -p ${BACKEND_DB_PORT}
    expose:
      - "${BACKEND_DB_PORT}"
    networks:
      - pong_net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d","db_prod" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # user manager 
  user-manager:
    container_name: user-manager
    image: user-manager
    pull_policy: never
    build: ./user-manager
    env_file:
      - .env
    depends_on:
      users_db:
        condition: service_healthy
    expose:
      - "${USERS_PORT}"
    volumes:
      - users_vol:/var/www/django/user-manager/
    networks:
      - pong_net

  users_db:
    container_name: users_db
    image: postgres:14.11-alpine3.18
    restart: always
    environment:
      POSTGRES_USER: ${USERS_DB_USER}
      PGUSER: ${USERS_DB_USER}
      POSTGRES_PASSWORD: ${USERS_DB_PW}
      POSTGRES_DB: ${USERS_DB_NAME}
      PGDATABASE: ${USERS_DB_NAME}
      PGPORT: ${USERS_DB_PORT}
    volumes:
      - users_db_vol:/var/lib/postgresql/data
    command: -p ${USERS_DB_PORT}
    expose:
      - "${USERS_DB_PORT}"
    networks:
      - pong_net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d","db_prod" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  pong_net:
    driver: bridge

volumes:
  # 볼륨
  backend_db_vol:
  users_db_vol:
  # 바인드 마운트
  backend_vol:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${BACKEND_VOL_PATH}
  users_vol:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${USERS_VOL_PATH}